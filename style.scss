@import url("https://fonts.googleapis.com/css2?family=Nerko+One&display=swap");

.offset {
  box-shadow: 0.3em 0.3em 0 0 var(--color), inset 0.3em 0.3em 0 0 var(--color);

  &:hover,
  &:focus {
    box-shadow: 0 0 0 0 var(--hover), inset 6em 3.5em 0 0 var(--hover);
  }
}

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
// Make a map with the class names and matching colors
$colors: (
  fill: #a972cb,
  pulse: #ef6eae,
  close: #ff7f82,
  raise: #ffa260,
  up: #e4cb58,
  slide: #8fc866,
  offset: #19bc8b,
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
// Loop through the map and set CSS custom properties using Sass variables
@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
button {
  color: var(--color);
  transition: 0.25s;

  &:hover,
  &:focus {
    border-color: var(--hover);
    color: #fff;
    cursor: pointer;
  }
}

//=== Pen styling, ignore

// Basic button styles
button {
  background: none;
  border: 2px solid;
  font-family: "Nerko One", cursive;
  font-size: 1.5em;
  line-height: 1;
  margin: 0.5em;
  padding: 0.5em 1em;
}

h3 {
  // position: fixed;
  font-weight: 900;
  color: #069bc9;
  background-color: rgb(37, 35, 170);

}

.h3 {
  border-bottom: solid black 3px;
  position: fixed;
  background-color: rgb(37, 35, 170);
  width: 783px;
  z-index: 10;
}

.liste {
  position: relative;
  width: 800px;
  height: 500px;
  margin: 200px auto 0;
  background: #f3eeee;
  overflow: hidden;
  overflow-y: scroll;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,
    rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;
}

body {
  text-align: center;
  background: #0f0f16;
}

p {
  margin-right: 5px;
  font-family: "Nerko One", cursive;
}
.resultat {
  font-size: 1.5em;
  color: #f1f1f1;
}

.poids {
  width: 25px;
  margin-left: 5px;
  text-align: center;
}

.checkbox-wrapper-19:first-child {
  margin-top: 60px;
  
}

.checkbox-wrapper-19 {
  box-sizing: border-box;
  margin-top: 5px;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  // --background-color: #fff;
  --checkbox-height: 20px;
}

@-moz-keyframes dothabottomcheck-19 {
  0% {
    height: 0;
  }
  100% {
    height: calc(var(--checkbox-height) / 2);
  }
}

@-webkit-keyframes dothabottomcheck-19 {
  0% {
    height: 0;
  }
  100% {
    height: calc(var(--checkbox-height) / 2);
  }
}

@keyframes dothabottomcheck-19 {
  0% {
    height: 0;
  }
  100% {
    height: calc(var(--checkbox-height) / 2);
  }
}

@keyframes dothatopcheck-19 {
  0% {
    height: 0;
  }
  50% {
    height: 0;
  }
  100% {
    height: calc(var(--checkbox-height) * 1.2);
  }
}

@-webkit-keyframes dothatopcheck-19 {
  0% {
    height: 0;
  }
  50% {
    height: 0;
  }
  100% {
    height: calc(var(--checkbox-height) * 1.2);
  }
}

@-moz-keyframes dothatopcheck-19 {
  0% {
    height: 0;
  }
  50% {
    height: 0;
  }
  100% {
    height: calc(var(--checkbox-height) * 1.2);
  }
}

.checkbox-wrapper-19 input[type="checkbox"] {
  display: none;
}

.checkbox-wrapper-19 .check-box {
  height: var(--checkbox-height);
  width: var(--checkbox-height);
  background-color: transparent;
  border: calc(var(--checkbox-height) * 0.1) solid #000;
  border-radius: 5px;
  position: relative;
  display: inline-block;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -moz-transition: border-color ease 0.2s;
  -o-transition: border-color ease 0.2s;
  -webkit-transition: border-color ease 0.2s;
  transition: border-color ease 0.2s;
  cursor: pointer;
}
.checkbox-wrapper-19 .check-box::before,
.checkbox-wrapper-19 .check-box::after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: absolute;
  height: 0;
  width: calc(var(--checkbox-height) * 0.2);
  background-color: #349ab9;
  display: inline-block;
  -moz-transform-origin: left top;
  -ms-transform-origin: left top;
  -o-transform-origin: left top;
  -webkit-transform-origin: left top;
  transform-origin: left top;
  border-radius: 5px;
  content: " ";
  -webkit-transition: opacity ease 0.5;
  -moz-transition: opacity ease 0.5;
  transition: opacity ease 0.5;
}
.checkbox-wrapper-19 .check-box::before {
  top: calc(var(--checkbox-height) * 0.72);
  left: calc(var(--checkbox-height) * 0.41);
  box-shadow: 0 0 0 calc(var(--checkbox-height) * 0.05) var(--background-color);
  -moz-transform: rotate(-135deg);
  -ms-transform: rotate(-135deg);
  -o-transform: rotate(-135deg);
  -webkit-transform: rotate(-135deg);
  transform: rotate(-135deg);
}
.checkbox-wrapper-19 .check-box::after {
  top: calc(var(--checkbox-height) * 0.37);
  left: calc(var(--checkbox-height) * 0.05);
  -moz-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.checkbox-wrapper-19 input[type="checkbox"]:checked + .check-box,
.checkbox-wrapper-19 .check-box.checked {
  border-color: #349ab9;
}
.checkbox-wrapper-19 input[type="checkbox"]:checked + .check-box::after,
.checkbox-wrapper-19 .check-box.checked::after {
  height: calc(var(--checkbox-height) / 2);
  -moz-animation: dothabottomcheck-19 0.2s ease 0s forwards;
  -o-animation: dothabottomcheck-19 0.2s ease 0s forwards;
  -webkit-animation: dothabottomcheck-19 0.2s ease 0s forwards;
  animation: dothabottomcheck-19 0.2s ease 0s forwards;
}
.checkbox-wrapper-19 input[type="checkbox"]:checked + .check-box::before,
.checkbox-wrapper-19 .check-box.checked::before {
  height: calc(var(--checkbox-height) * 1.2);
  -moz-animation: dothatopcheck-19 0.4s ease 0s forwards;
  -o-animation: dothatopcheck-19 0.4s ease 0s forwards;
  -webkit-animation: dothatopcheck-19 0.4s ease 0s forwards;
  animation: dothatopcheck-19 0.4s ease 0s forwards;
}

// .btn {
//   color: rgb(160, 162, 172);
//   cursor: pointer;
//   font-size: 20px;
//   font-weight: 400;
//   line-height: 45px;
//   margin-top: 10px;
//   width: 195px;
//   padding: 5px;
//   // position: relative;
//   text-decoration: none;
//   text-transform: uppercase;

// }
// .btn:hover {
//   text-decoration: none;
// }
// .btn-3 {
//   background: #28399b;
//   border: 1px solid #4590bb;
//   box-shadow: 0px 2px 0 #4268b9, 2px 4px 6px #07406e;
//   font-weight: 900;
//   letter-spacing: 1px;
//   transition: all 150ms linear;
// }

// .btn-3:hover {
//   background: #120d5e;
//   border: 1px solid rgba(138, 194, 194, 0.05);
//   box-shadow: 1px 1px 2px rgba(107, 124, 207, 0.2);
//   color: #eed8d7;
//   text-decoration: none;
//   text-shadow: -1px -1px 0 #4568c9;
//   transition: all 250ms linear;
// }
